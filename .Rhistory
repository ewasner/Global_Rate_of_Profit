br(),
br(),
uiOutput("WIOT_textCountry")
)
)
)
)
)
)
)
)
server <- function(input, output) {
############################################# EPWT ###############################################
###################### Global Profit Rate ########################
## Global data - Using all available data observations from each year
data.EPWT.Global.All <- reactive({
PWT %>% filter(format(input$EPWT_dateStartGlobal,format="%Y") <= year & year <= format(input$EPWT_dateEndGlobal,format="%Y")) %>%
group_by(year) %>%
## Calculate each observation's share in global capital stock and global output
mutate(Kshare=K/sum(K),
Yshare=Y/sum(Y)) %>%
## Compute weighted average of ROP, PS, and OCR
summarise(ROP=sum(r*Kshare),
PS=sum(PS*Yshare),
OCR=sum(OCR*Kshare))
})
## Global data - Using only countries which have observations in every year in the user's time selection
data.EPWT.Global.LimitCountries <- reactive({
data <- PWT %>% filter(format(input$EPWT_dateStartGlobal,format="%Y") <= year & year <= format(input$EPWT_dateEndGlobal,format="%Y"))
## Create a list of countries which have data in all years selected
validCountries <- group_by(data,countrycode) %>% summarise(length=n()) %>% filter(length==max(length))
data %>% filter(countrycode %in% validCountries$countrycode) %>%
group_by(year) %>%
## Calculate each observation's share in global capital stock and global output
mutate(Kshare=K/sum(K),
Yshare=Y/sum(Y)) %>%
## Compute weighted average of ROP, PS, and OCR
summarise(ROP=sum(r*Kshare),
PS=sum(PS*Yshare),
OCR=sum(OCR*Kshare))
})
## Create list with both All and LimitCountries dfs
data.EPWT.Global <- reactive({
list(All=data.EPWT.Global.All(),
LimitCountries=data.EPWT.Global.LimitCountries())
})
## Create df with average annual growth rates for OCR, PS, and ROP
data.EPWT.Global.GR <- reactive({
data.frame(gr_OCR = avg_GR(data.EPWT.Global()[[input$EPWT_globalAggregate]]$OCR),
gr_PS = avg_GR(data.EPWT.Global()[[input$EPWT_globalAggregate]]$PS),
gr_ROP=avg_GR(data.EPWT.Global()[[input$EPWT_globalAggregate]]$ROP))
})
EPWT_GlobalPlot1 <- reactive({
ggplot(data = data.EPWT.Global()[[input$EPWT_globalAggregate]]  %>%
select(year, ROP),
aes(x=as.Date(as.character(year), "%Y"), y=ROP)) +
geom_line() +
geom_smooth(method=ui.trendLineList[[input$EPWT_trendLineGlobal]][1],
formula=ui.trendLineList[[input$EPWT_trendLineGlobal]][2],
se=FALSE,
linetype="dashed") +
labs(x="Year",
y="Percentage",
title=paste0("Global Annual Rate of Profit"),
subtitle=ui.EPWT_GlobalPlot1Subtitle[[input$EPWT_globalAggregate]]) +
theme_minimal()
})
## Plot Global ROP
output$EPWT_plotGlobal1 <- renderPlot({
EPWT_GlobalPlot1()
})
EPWT_GlobalPlot2 <- reactive({
ggplot(data = data.EPWT.Global.GR() %>%
gather("Measure",
"Value"),
aes(x=Measure, y=Value, fill=Measure)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(axis.text.x=element_blank()) +
scale_fill_manual("Measure",
values = c("navajowhite1",
"lightsalmon1",
"lightsalmon4"),
labels = c("Output-Capital Ratio",
"Profit Share",
"Rate of Profit")) +
labs(x="",
y="Average Growth Rate (%)",
title="Rate of Profit Decomposition",
subtitle=paste0("Average Rates of Growth: ",format(input$EPWT_dateStartGlobal,format="%Y")," - ",format(input$EPWT_dateEndGlobal,format="%Y")))
})
## Plot Global ROP Decomposition
output$EPWT_plotGlobal2 <- renderPlot({
EPWT_GlobalPlot2()
})
output$EPWT_downloadPlot1Global <- downloadHandler(
filename = function(){paste0("RateOfProfit - Global.",input$EPWT_fformatGlobal)},
content = function(file) {
do.call(input$EPWT_fformatGlobal,list(file))
print(EPWT_GlobalPlot1())
dev.off()
})
output$EPWT_downloadPlot2Global <- downloadHandler(
filename = function(){paste0("RateOfProfitDecomposition - Global.",input$EPWT_fformatGlobal)},
content = function(file) {
do.call(input$EPWT_fformatGlobal,list(file))
print(EPWT_GlobalPlot2())
dev.off()
})
output$EPWT_downloadDataGlobal <- downloadHandler(
filename = "RateofProfit Data - Global.csv",
content = function(file){
write.table(data.EPWT.Global()[[input$EPWT_globalAggregate]], file = file, sep = ",", row.names = FALSE)
}
)
###################### Income Group Profit Rate ########################
## Group data - Using all available data observations from each year
data.EPWT.Group.All <- reactive({
PWT %>% filter(wb_income_group==input$EPWT_group,
format(input$EPWT_dateStartGroup,format="%Y") <= year & year <= format(input$EPWT_dateEndGroup,format="%Y")) %>%
group_by(year) %>%
## Calculate each observation's share in global capital stock and global output
mutate(Kshare=K/sum(K),
Yshare=Y/sum(Y)) %>%
## Compute weighted average of ROP, PS, and OCR
summarise(ROP=sum(r*Kshare),
PS=sum(PS*Yshare),
OCR=sum(OCR*Kshare))
})
## Group data - Using only countries which have observations in every year in the user's time selection
data.EPWT.Group.LimitCountries <- reactive({
## Filter for countries which have observations for every year in selected date range
data <- PWT %>% filter(wb_income_group==input$EPWT_group,
format(input$EPWT_dateStartGroup,format="%Y") <= year & year <= format(input$EPWT_dateEndGroup,format="%Y"))
## Create a list of countries which have data in all years selected
validCountries <- group_by(data,countrycode) %>% summarise(length=n()) %>% filter(length==max(length))
data %>% filter(countrycode %in% validCountries$countrycode) %>%
group_by(year) %>%
## Calculate each observation's share in global capital stock and global output
mutate(Kshare=K/sum(K),
Yshare=Y/sum(Y)) %>%
## Compute weighted average of ROP, PS, and OCR
summarise(ROP=sum(r*Kshare),
PS=sum(PS*Yshare),
OCR=sum(OCR*Kshare))
})
## Create list with both All and LimitCountries dfs
data.EPWT.Group <- reactive({
list(All=data.EPWT.Group.All(),
LimitCountries=data.EPWT.Group.LimitCountries())
})
## Create df with average annual growth rates for OCR, PS, and ROP
data.EPWT.Group.GR <- reactive({
data.frame(gr_OCR = avg_GR(data.EPWT.Group()[[input$EPWT_groupAggregate]]$OCR),
gr_PS = avg_GR(data.EPWT.Group()[[input$EPWT_groupAggregate]]$PS),
gr_ROP=avg_GR(data.EPWT.Group()[[input$EPWT_groupAggregate]]$ROP))
})
EPWT_GroupPlot1 <- reactive({
ggplot(data = data.EPWT.Group()[[input$EPWT_groupAggregate]] %>%
select(year, ROP),
aes(x=as.Date(as.character(year), "%Y"), y=ROP)) +
geom_line() +
geom_smooth(method=ui.trendLineList[[input$EPWT_trendLineGroup]][1],
formula=ui.trendLineList[[input$EPWT_trendLineGroup]][2],
se=FALSE,
linetype="dashed") +
labs(x="Year",
y="Percentage",
title=paste0(input$EPWT_group," Annual Rate of Profit"),
subtitle=ui.EPWT_GlobalPlot1Subtitle[[input$EPWT_groupAggregate]]) +
theme_minimal()
})
## Plot Group ROP
output$EPWT_plotGroup1 <- renderPlot({
EPWT_GroupPlot1()
})
EPWT_GroupPlot2 <- reactive({
ggplot(data = data.EPWT.Group.GR() %>%
gather("Measure",
"Value"),
aes(x=Measure, y=Value, fill=Measure)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(axis.text.x=element_blank()) +
scale_fill_manual("Measure",
values = c("navajowhite1",
"lightsalmon1",
"lightsalmon4"),
labels = c("Output-Capital Ratio",
"Profit Share",
"Rate of Profit")) +
labs(x="",
y="Average Growth Rate (%)",
title="Rate of Profit Decomposition",
subtitle=paste0("Average Rates of Growth: ",
format(input$EPWT_dateStartGroup,format="%Y"),
" - ",
format(input$EPWT_dateEndGroup,format="%Y")))
})
## Plot Group ROP Decomposition
output$EPWT_plotGroup2 <- renderPlot({
EPWT_GroupPlot2()
})
output$EPWT_downloadPlot1Group <- downloadHandler(
filename = function(){str_replace(paste0("RateOfProfit - ",input$EPWT_group,".",input$EPWT_fformatGroup),":"," -")},
content = function(file) {
do.call(input$EPWT_fformatGroup,list(file))
print(EPWT_GroupPlot1())
dev.off()
})
output$EPWT_downloadPlot2Group <- downloadHandler(
filename = function(){str_replace(paste0("RateOfProfitDecomposition - ",input$EPWT_group,".",input$EPWT_fformatGroup),":"," -")},
content = function(file) {
do.call(input$EPWT_fformatGroup,list(file))
print(EPWT_GroupPlot2())
dev.off()
})
output$EPWT_downloadDataGroup <- downloadHandler(
filename = function(){str_replace(paste0("RateofProfit Data - ",input$EPWT_group,".csv"),":"," -")},
content = function(file){
write.table(data.EPWT.Group()[[input$EPWT_groupAggregate]], file = file, sep = ",", row.names = FALSE)
}
)
###################### Individual Country Profit Rate ########################
## Data for individual country selection
data.EPWT.Country <- reactive({
PWT %>% filter(country==input$EPWT_country,
format(input$EPWT_dateStartCountry,format="%Y") <= year & year <= format(input$EPWT_dateEndCountry,format="%Y"))
})
## Create df with average annual growth rates for OCR, PS, and ROP
data.EPWT.Country.GR <- reactive({
data.frame(gr_OCR = avg_GR(data.EPWT.Country()[with(data.EPWT.Country(),order(year)),]$OCR),
gr_PS = avg_GR(data.EPWT.Country()[with(data.EPWT.Country(),order(year)),]$PS),
gr_ROP=avg_GR(data.EPWT.Country()[with(data.EPWT.Country(),order(year)),]$r))
})
EPWT_CountryPlot1 <- reactive({
ggplot(data = data.EPWT.Country(),
aes(x=as.Date(as.character(year), "%Y"), y=r)) +
geom_line() +
geom_smooth(method=ui.trendLineList[[input$EPWT_trendLineCountry]][1],
formula=ui.trendLineList[[input$EPWT_trendLineCountry]][2],
se=FALSE,
linetype="dashed") +
labs(x="Year",
y="Percentage",
title=paste0("Annual Rate of Profit"),
subtitle=input$EPWT_country) +
theme_minimal()
})
## Plot Country ROP
output$EPWT_plotCountry1 <- renderPlot({
EPWT_CountryPlot1()
})
EPWT_CountryPlot2 <- reactive({
ggplot(data = data.EPWT.Country.GR() %>%
gather("Measure",
"Value"),
aes(x=Measure, y=Value, fill=Measure)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(axis.text.x=element_blank()) +
scale_fill_manual("Measure",
values = c("navajowhite1",
"lightsalmon1",
"lightsalmon4"),
labels = c("Output-Capital Ratio",
"Profit Share",
"Rate of Profit")) +
labs(x="",
y="Average Growth Rate (%)",
title="Rate of Profit Decomposition",
subtitle=paste0("Average Rates of Growth: ",
format(input$EPWT_dateStartCountry,format="%Y"),
" - ",
format(input$EPWT_dateEndCountry,format="%Y")))
})
## Plot Country ROP Decomposition
output$EPWT_plotCountry2 <- renderPlot({
EPWT_CountryPlot2()
})
output$EPWT_downloadPlot1Country <- downloadHandler(
filename = function(){paste0("RateOfProfit - ",input$EPWT_country,".",input$EPWT_fformatCountry)},
content = function(file) {
do.call(input$EPWT_fformatCountry,list(file))
print(EPWT_CountryPlot1())
dev.off()
})
output$EPWT_downloadPlot2Country <- downloadHandler(
filename = function(){paste0("RateOfProfitDecomposition - ",input$EPWT_country,".",input$EPWT_fformatCountry)},
content = function(file) {
do.call(input$EPWT_fformatCountry,list(file))
print(EPWT_CountryPlot2())
dev.off()
})
output$EPWT_downloadDataCountry <- downloadHandler(
filename = function(){paste0("RateofProfit Data - ",input$EPWT_country,".csv")},
content = function(file){
write.table(data.EPWT.Country() %>%
select(year,OCR,PS,r),
file = file, sep = ",", row.names = FALSE)
}
)
######################## Common Functions ################################
## Download Handler for downloading explanatory pdf
output$EPWT_downloadExplanationFileGlobal <- downloadHandler(
filename = "world-profitability.pdf",
content = function(file) {
file.copy("world-profitability.pdf", file)
})
output$EPWT_downloadExplanationFileGroup <- downloadHandler(
filename = "world-profitability.pdf",
content = function(file) {
file.copy("world-profitability.pdf", file)
})
output$EPWT_downloadExplanationFileCountry <- downloadHandler(
filename = "world-profitability.pdf",
content = function(file) {
file.copy("world-profitability.pdf", file)
})
## Text to display at bottom of page
description <- tagList("Data for the profitability analysis reported on this dashboard comes from the ",
a("Extended Penn World Table",href="https://sites.google.com/a/newschool.edu/duncan-foley-homepage/home/EPWT"),
". We thank Adalmir Marquetti for sharing the data with us. More details can be found on the downloaded data file. This dashboard has been created and is maintained by Evan Wasner (",
a("ewasner@umass.edu",href="mailto:@ewasner@umass.edu"),
") and Deepankar Basu (",
a("dbasu@econs.umass.edu",href="mailto:@dbasu@econs.umass.edu"),
").")
## Shiny cannot use the same output multiple times --> therefore must define three separate outputs to reuse text
output$EPWT_textGlobal <- renderUI({description})
output$EPWT_textGroup <- renderUI({description})
output$EPWT_textCountry <- renderUI({description})
############################################# WIOT ###############################################
###################### Global Profit Rate ########################
data.WIOT.Global <- reactive({
WIOT %>%
group_by(year, country) %>% summarize(across(c(LAB, K, CAP, VA), sum)) %>%
filter(format(input$WIOT_dateStartGlobal,format="%Y") <= year & year <= format(input$WIOT_dateEndGlobal,format="%Y")) %>%
mutate(OCR=VA/K,
PS1=CAP/VA,
ROP1=OCR*PS1,
Kshare=K/sum(K),
Yshare=VA/sum(VA)) %>% group_by(year) %>%
## Compute weighted average of ROP, PS, and OCR
summarise(ROP=sum(ROP1*Kshare),
PS=sum(PS1*Yshare),
OCR=sum(OCR*Kshare))
})
## Create df with average annual growth rates for OCR, PS, and ROP
data.WIOT.Global.GR <- reactive({
data.frame(gr_OCR = avg_GR(data.WIOT.Global()$OCR),
gr_PS = avg_GR(data.WIOT.Global()$PS),
gr_ROP=avg_GR(data.WIOT.Global()$ROP))
})
WIOT_GlobalPlot1 <- reactive({
ggplot(data = data.WIOT.Global() %>%
select(year, ROP),
aes(x=as.Date(as.character(year), "%Y"), y=ROP)) +
geom_line() +
geom_smooth(method=ui.trendLineList[[input$WIOT_trendLineGlobal]][1],
formula=ui.trendLineList[[input$WIOT_trendLineGlobal]][2],
se=FALSE,
linetype="dashed") +
labs(x="Year",
y="Percentage",
title=paste0("Global Annual Rate of Profit")) +
theme_minimal()
})
## Plot Global ROP
output$WIOT_plotGlobal1 <- renderPlot({
WIOT_GlobalPlot1()
})
WIOT_GlobalPlot2 <- reactive({
ggplot(data = data.WIOT.Global.GR() %>%
gather("Measure",
"Value"),
aes(x=Measure, y=Value, fill=Measure)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(axis.text.x=element_blank()) +
scale_fill_manual("Measure",
values = c("navajowhite1",
"lightsalmon1",
"lightsalmon4"),
labels = c("Output-Capital Ratio",
"Profit Share",
"Rate of Profit")) +
labs(x="",
y="Average Growth Rate (%)",
title="Rate of Profit Decomposition",
subtitle=paste0("Average Rates of Growth: ",format(input$WIOT_dateStartGlobal,format="%Y")," - ",format(input$WIOT_dateEndGlobal,format="%Y")))
})
## Plot Global ROP Decomposition
output$WIOT_plotGlobal2 <- renderPlot({
WIOT_GlobalPlot2()
})
output$WIOT_downloadPlot1Global <- downloadHandler(
filename = function(){paste0("RateOfProfit - Global.",input$WIOT_fformatGlobal)},
content = function(file) {
do.call(input$WIOT_fformatGlobal,list(file))
print(WIOT_GlobalPlot1())
dev.off()
})
output$WIOT_downloadPlot2Global <- downloadHandler(
filename = function(){paste0("RateOfProfitDecomposition - Global.",input$WIOT_fformatGlobal)},
content = function(file) {
do.call(input$WIOT_fformatGlobal,list(file))
print(WIOT_GlobalPlot2())
dev.off()
})
output$WIOT_downloadDataGlobal <- downloadHandler(
filename = "RateofProfit Data - Global.csv",
content = function(file){
write.table(data.WIOT.Global(), file = file, sep = ",", row.names = FALSE)
}
)
###################### Industry Profit Rate ########################
output$WIOT_plot <- renderPlot({
ggplot(data=WIOT%>%filter(country=="USA"),
aes(x=as.Date(as.character(year), "%Y"), y=K)) +
geom_line()
})
###################### Country Profit Rate ########################
#At the national level: just add the capital stock, profits, labor compensation, etc. into national aggregates
data.WIOT.Country <- reactive({
WIOT %>%
group_by(year, Name) %>% summarize(across(c(LAB, K, CAP, VA), sum)) %>%
filter(format(input$WIOT_dateStartCountry,format="%Y") <= year & year <= format(input$WIOT_dateEndCountry,format="%Y"),
Name==input$WIOT_country) %>%
mutate(OCR=VA/K,
PS1=CAP/VA,
PS2=(VA-LAB)/VA,
ROP1=OCR*PS1,
ROP2=OCR*PS2,
labor.share=LAB/VA,
r.surplus.1=CAP/LAB,
r.surplus.2=(VA-LAB)/LAB,
org.comp=K/LAB,
Kshare=K/sum(K),
Yshare=VA/sum(VA))
})
## Create df with average annual growth rates for OCR, PS, and ROP
data.WIOT.Country.GR <- reactive({
data.frame(gr_OCR = avg_GR(data.WIOT.Country()$OCR),
gr_PS = avg_GR(data.WIOT.Country()$PS1),
gr_ROP=avg_GR(data.WIOT.Country()$ROP1))
})
WIOT_CountryPlot1 <- reactive({
ggplot(data = data.WIOT.Country() %>%
select(year, ROP1),
aes(x=as.Date(as.character(year), "%Y"), y=ROP1)) +
geom_line() +
geom_smooth(method=ui.trendLineList[[input$WIOT_trendLineCountry]][1],
formula=ui.trendLineList[[input$WIOT_trendLineCountry]][2],
se=FALSE,
linetype="dashed") +
labs(x="Year",
y="Percentage",
title="Annual Rate of Profit",
subtitle=input$WIOT_country) +
theme_minimal()
})
## Plot Country ROP
output$WIOT_plotCountry1 <- renderPlot({
WIOT_CountryPlot1()
})
WIOT_CountryPlot2 <- reactive({
ggplot(data = data.WIOT.Country.GR() %>%
gather("Measure",
"Value"),
aes(x=Measure, y=Value, fill=Measure)) +
geom_bar(stat="identity", position=position_dodge()) +
theme_minimal() +
theme(axis.text.x=element_blank()) +
scale_fill_manual("Measure",
values = c("navajowhite1",
"lightsalmon1",
"lightsalmon4"),
labels = c("Output-Capital Ratio",
"Profit Share",
"Rate of Profit")) +
labs(x="",
y="Average Growth Rate (%)",
title="Rate of Profit Decomposition",
subtitle=paste0("Average Rates of Growth: ",format(input$WIOT_dateStartCountry,format="%Y")," - ",format(input$WIOT_dateEndCountry,format="%Y")))
})
## Plot Country ROP Decomposition
output$WIOT_plotCountry2 <- renderPlot({
WIOT_CountryPlot2()
})
output$WIOT_downloadPlot1Country <- downloadHandler(
filename = function(){paste0("RateOfProfit - ",input$WIOT_country,".",input$WIOT_fformatCountry)},
content = function(file) {
do.call(input$WIOT_fformatCountry,list(file))
print(WIOT_CountryPlot1())
dev.off()
})
output$WIOT_downloadPlot2Country <- downloadHandler(
filename = function(){paste0("RateOfProfitDecomposition - ",input$WIOT_country,".",input$WIOT_fformatCountry)},
content = function(file) {
do.call(input$WIOT_fformatCountry,list(file))
print(WIOT_CountryPlot2())
dev.off()
})
output$WIOT_downloadDataCountry <- downloadHandler(
filename = function(){paste0("RateofProfit Data - ",input$WIOT_country,".csv")},
content = function(file){
write.table(data.WIOT.Country() %>%
select(year,OCR,PS1,ROP1),
file = file, sep = ",", row.names = FALSE)
})
}
shinyApp(ui = ui, server = server)
